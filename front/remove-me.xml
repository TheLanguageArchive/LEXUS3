<?xml version="1.0" encoding="UTF-8"?>
<rest:request xmlns:rest="http://org.apache.cocoon.transformation/rest/1.0" target="http://localhost:8008/exist/rest/db/lexus/lexica" method="POST">
<rest:header name="Content-Type" value="text/xml; charset=UTF-8"/>
<rest:body>
<query xmlns="http://exist.sourceforge.net/NS/exist">
<text>
        declare namespace lexus="http://www.mpi.nl/lat/lexus";
    
        declare function lexus:user-sequence($users as element()*)  as element()* {
            for $user in $users
                order by $user/name
                return element user {$user/@*, $user/*[local-name() = ('name', 'account', 'accesslevel', 'workspace')] }
        };
        declare function lexus:users($users as element()*)  as element()* {
            element users {lexus:user-sequence($users)}
        };
    
                        
                        let $json := &lt;json&gt;
&lt;id&gt;D224A0C6-3173-62D6-741D-86D5D844E7CE&lt;/id&gt;
&lt;requester&gt;LexiconBrowser687&lt;/requester&gt;
&lt;parameters&gt;
&lt;lexicon&gt;uuid:724702f9-33c5-4334-8458-2b1d8c2528a5&lt;/lexicon&gt;
&lt;refiner&gt;
&lt;startLetter&gt;&lt;/startLetter&gt;
&lt;pageSize&gt;25&lt;/pageSize&gt;
&lt;startPage&gt;0&lt;/startPage&gt;
&lt;/refiner&gt;
&lt;/parameters&gt;
&lt;/json&gt;
                        let $user-id := '1'
                        let $lexiconId := 'uuid:724702f9-33c5-4334-8458-2b1d8c2528a5'
                        let $lexicon := collection('/db/lexus/lexica')/lexicon[@id = $lexiconId]
                        let $startLetter := ''
                        let $pageSize := number('25')
                        let $startPage := number('0')
                        let $lexi := collection('/db/lexus/lexica')/lexus[meta/users/user/@ref = $user-id]
                        let $lexica := collection('/db/lexus/lexica')/lexicon[@id = $lexi/@id]
                        let $vicosURL := ''
                        
                        let $lexicalEntries := if ($startLetter ne '') 
                                                   then $lexicon/lexical-entry[@start-letter eq $startLetter]
                                                   else $lexicon/lexical-entry
                        let $startLetters := distinct-values($lexicalEntries/@start-letter)
                        let $queries := ()
                        let $schema := ()
                        
                        return element result
                                    {
                                        element results {
                                            element startLetter { $startLetter },
                                            element lexicon { $lexicon/@*, $lexicon/lexicon-information, 
                                            $lexi[@id eq $lexicon/@id]/meta },
                                            element lexical-entries { $lexicalEntries[position() gt ($startPage * $pageSize)][position() le (($startPage + 1) * $pageSize)] },
                                            element startPage { $startPage }
                                        },
                                        element lexica {
                                            for $lexicon in $lexica
                                                order by $lexicon/lexicon-information/feat[@name = "name"]
                                                return element lexicon
                                                    {$lexicon/@*,
                                                    $lexicon/lexicon-information,
                                                    $lexi[@id eq $lexicon/@id]/meta,
                                                    element size {count($lexicon/lexical-entry)}}
                                        },
                                        element startLetters { $startLetters },
                                        element queries { $queries },
                                        element schema { $schema }
                                    }
                    </text>
<properties>
<property name="pretty-print" value="no"/>
</properties>
</query>
</rest:body>
</rest:request>
