<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<map:sitemap xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd"
  xmlns:map="http://apache.org/cocoon/sitemap/1.0">


  <map:pipelines>


    <map:pipeline id="lexicon" type="noncaching">


      <!-- 
        Get queries
      -->
      <map:match pattern="startLetterSearch.json">
        <map:generate src="cocoon:/startLetterSearch"/>
        <map:transform type="saxon" src="startLetterSearchResult-2-JSON.xslt"/>
        <map:serialize type="json"/>
      </map:match>

      <map:match pattern="startLetterSearch">
        <map:aggregate element="data">
          <map:part src="cocoon://json"/>
          <map:part src="cocoon://user"/>
        </map:aggregate>
        <map:transform type="saxon" src="prepareStartLetterSearch.xslt"/>
        <map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/lexicon/startLetterSearch.xml"/>
        </map:transform>
        <map:transform type="tee" src="debug-info/front-post.xml"/>
        <map:transform type="saxon" src="views/prepareDisplayGenerator.xslt"/>
        <map:transform type="multifragment-xslt" src="cocoon:/getDisplayStylesheet.xslt">
          <map:parameter name="fragment.namespace" value="http://www.mpi.nl/lexus/display/1.0"/>
          <map:parameter name="fragment.element" value="lexical-entry"/>
        </map:transform>
        <!--        <map:transform type="tee" src="debug-info/front-pre-mft.xml"/>-->
        <map:transform type="multifragment-xslt" src="views/page2flexhtml.xslt">
          <map:parameter name="fragment.namespace" value="http://www.mpi.nl/lexus/display/1.0"/>
          <map:parameter name="fragment.element" value="page"/>
        </map:transform>
        <!--        <map:transform type="tee" src="debug-info/front-post-mft.xml"/>-->
        <map:serialize type="xml"/>
      </map:match>

      <!-- 
        Get data for lexical entry
      -->
      <map:match pattern="getLexicalEntryData.json">
        <map:generate src="cocoon:/getLexicalEntryData"/>
        <!--        <map:transform type="tee" src="debug-info/front-pre.xml"/>-->
        <map:transform type="saxon" src="getLexicalEntryData-2-JSON.xslt"/>
        <!--        <map:transform type="tee" src="debug-info/front-post.xml"/>-->
        <map:serialize type="json"/>
      </map:match>

      <map:match pattern="getLexicalEntryData">
        <map:aggregate element="data">
          <map:part src="cocoon://json"/>
          <map:part src="cocoon://user"/>
        </map:aggregate>
        <map:transform type="saxon" src="prepareGetLexicalEntryData.xslt"/>
        <map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/lexicon/getLexicalEntryData.xml"/>
        </map:transform>
        <map:transform type="saxon" src="views/prepareDisplayGeneratorForLexicalEntry.xslt"/>
        <!--        <map:transform type="tee" src="debug-info/front-pre-mft.xml"/>-->
        <map:transform type="multifragment-xslt" src="cocoon:/getDisplayStylesheet.xslt">
          <map:parameter name="fragment.namespace" value="http://www.mpi.nl/lexus/display/1.0"/>
          <map:parameter name="fragment.element" value="lexical-entry"/>
        </map:transform>
        <!--        <map:transform type="tee" src="debug-info/front-post-mft.xml"/>-->
        <map:transform type="multifragment-xslt" src="views/page2flexhtml.xslt">
          <map:parameter name="fragment.namespace" value="http://www.mpi.nl/lexus/display/1.0"/>
          <map:parameter name="fragment.element" value="page"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>



      <!-- 
        Save lexical entry
      -->
      <map:match pattern="saveLexicalEntry.json">
        <map:aggregate element="data">
          <map:part src="cocoon://json"/>
          <map:part src="cocoon://user"/>
        </map:aggregate>
        <!--        <map:transform type="tee" src="debug-info/front-pre.xml"/>-->
        <!--<map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/lexicon/saveLexicalEntry.xml"/>
        </map:transform>-->
        <map:transform type="tee" src="debug-info/front-post.xml"/>
        <map:serialize type="xml"/>
      </map:match>

    </map:pipeline>

    <map:pipeline type="caching">
      <!--
         Get the listView (DSL) from the database using the back module and call DSL_2_XSLT.xslt
         to transform the DSL to a XSLT stylesheet.
         -->
      <map:match pattern="getDisplayStylesheet.xslt">
        <map:aggregate element="data">
          <map:part src="cocoon://json"/>
          <map:part src="cocoon://user"/>
        </map:aggregate>
        <map:transform type="tee" src="debug-info/front-pre-display.xml"/>
        <map:transform type="saxon" src="views/prepareGetListView.xslt"/>
        <map:transform type="tee" src="debug-info/front-post-display.xml"/>
        <map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/schema-editor/getListView.xml"/>
        </map:transform>
        <map:transform type="saxon" src="views/prepareViewForTransformation.xslt"/>
        <map:transform type="saxon" src="views/DSL_2_XSLT.xslt"/>
        <map:serialize/>
      </map:match>


      <!--
        Get the Lexical Entry View (DSL) from the database using the back module and call DSL_2_XSLT.xslt
        to transform the DSL to a XSLT stylesheet.
      -->
      <map:match pattern="getLEVStylesheet.xslt">
        <map:aggregate element="data">
          <map:part src="cocoon://user"/>
        </map:aggregate>
        <map:transform type="saxon" src="views/prepareGetLEView.xslt">
          <map:parameter name="id" value="{request:id}"/>
        </map:transform>
        <map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/schema-editor/getLEView.xml"/>
        </map:transform>
        <map:transform type="saxon" src="views/prepareViewForTransformation.xslt"/>
        <!--        <map:transform type="tee" src="debug-info/front-pre-display.xml"/>-->
        <map:transform type="saxon" src="views/DSL_2_XSLT.xslt"/>
        <!--        <map:transform type="tee" src="debug-info/front-post-display.xml"/>-->
        <map:serialize/>
      </map:match>

    </map:pipeline>


    <!-- Get Lexical Entry View -->
    <map:pipeline>
      <map:match pattern="entryLayout.htm">
        <map:generate type="request"/>
        <!--<map:aggregate element="data">
          <map:part src="cocoon://request"/>
          <map:part src="cocoon://user"/>
        </map:aggregate>-->
        <map:transform type="saxon" src="views/prepareGetLexicalEntryViewData.xslt"/>
        <!--<map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/lexicon/getLexicalEntryData.xml"/>
        </map:transform>
        <map:transform type="saxon" src="views/prepareDisplayGeneratorForLexicalEntry.xslt"/>
        <map:transform type="tee" src="debug-info/front-pre-mft.xml"/>
        <map:transform type="multifragment-xslt" src="cocoon:/getLEVStylesheet.xslt">
          <map:parameter name="fragment.namespace" value="http://www.mpi.nl/lexus/display/1.0"/>
          <map:parameter name="fragment.element" value="lexical-entry"/>
        </map:transform>
        <map:transform type="tee" src="debug-info/front-post-mft.xml"/>
        <map:transform type="multifragment-xslt" src="views/page2flexhtml.xslt">
          <map:parameter name="fragment.namespace" value="http://www.mpi.nl/lexus/display/1.0"/>
          <map:parameter name="fragment.element" value="page"/>
        </map:transform>
        <map:transform type="saxon" src="getLexicalEntryData-2-JSON.xslt"/>-->
        <map:serialize type="xml"/>
      </map:match>

    </map:pipeline>


    <map:pipeline>

      <!-- 
        Get a zip with the lexicon in one document and the schema we use internally.
      -->
      <map:match pattern="XMLexport.zip">
        <map:aggregate element="data">
          <map:part src="export/baseZip.xml"/>
          <map:part src="cocoon://user"/>
        </map:aggregate>
        <map:transform type="saxon" src="export/prepareGetDocumentAndSchema.xslt">
          <map:parameter name="id" value="{request-param:id}"/>
        </map:transform>
        <map:transform type="servletService">
          <map:parameter name="service" value="servlet:back:/lexicon/getDocumentAndSchema.xml"/>
        </map:transform>
        <map:transform type="saxon" src="export/createLexiconAndSchemaZipEntries.xslt"/>
        <map:transform src="export/prepareZipForSerialisation.xslt"/>
        <map:serialize type="zip"/>
      </map:match>

    </map:pipeline>

  </map:pipelines>

</map:sitemap>
