<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- $Id: demo-application-context.xml 641850 2008-03-27 15:34:55Z reinhard $ -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:pipeline="http://cocoon.apache.org/schema/pipeline"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
  http://cocoon.apache.org/schema/pipeline http://cocoon.apache.org/schema/pipeline/cocoon-pipeline-1.0.xsd">

    <bean name="org.apache.cocoon.auth.SecurityHandler/lexusHandler"
        class="org.apache.cocoon.auth.impl.PipelineSecurityHandler" scope="singleton">
        <property name="authenticationResource" value="cocoon://lexus-authuser"/>
        <property name="sourceResolver" ref="org.apache.excalibur.source.SourceResolver"/>
    </bean>

    <bean name="org.apache.cocoon.auth.Application/Lexus"
        class="org.apache.cocoon.auth.impl.StandardApplication" scope="singleton">
        <property name="securityHandler" ref="org.apache.cocoon.auth.SecurityHandler/lexusHandler"/>
    </bean>

    <bean name="org.apache.cocoon.serialization.Serializer/json"
        class="org.apache.cocoon.serialization.JSONSerializer" scope="prototype"
        parent="org.apache.cocoon.serialization.Serializer/text">
        <pipeline:component mime-type="application/json;charset=utf-8"/>
        <property name="format">
            <props>
                <prop key="encoding">UTF-8</prop>
            </props>
        </property>
    </bean>

    <!--<bean name="org.apache.cocoon.transformation.Transformer/stx2"
    class="net.sf.joost.trax.TransformerFactoryImpl" scope="prototype">
  </bean>-->

    <bean name="org.apache.cocoon.generation.Generator/json"
        class="org.apache.cocoon.generation.JSONGenerator" scope="prototype"/>

    <bean name="org.apache.cocoon.generation.Generator/sessionattribute"
        class="org.apache.cocoon.generation.SessionAttributeGenerator" scope="prototype"/>

    <bean name="org.apache.cocoon.generation.Generator/fileupload"
        class="nl.mpi.lexus.generation.LexusFileUploads" scope="prototype"/>

    <bean name="org.apache.cocoon.transformation.Transformer/process-upload"
        class="nl.mpi.lexus.transformation.UploadProcessorTransformer" scope="prototype"/>

    <bean name="org.apache.cocoon.spring.configurator.log4j"
        class="org.apache.cocoon.spring.configurator.log4j.Log4JConfigurator" scope="singleton">
        <property name="resource" value="/WEB-INF/log4j.xml"/>
    </bean>


    <!--<bean id="EAF-handler" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/LEXUS/EAF_Handler" />
    </bean>-->
    <!--
<!-\-    <jee:jndi-lookup id="EAF-handler" jndi-name="java:comp/env/LEXUS/EAF_Handler"/>-\->
    
    <bean name="nl.mpi.lexus.transformation.ImdiArchiveTransformer/imdi-archive"
        class="nl.mpi.lexus.transformation.ImdiArchiveTransformer" scope="singleton">
<!-\-        <property name="EAF-handler" ref="EAF-handler"/>-\->
<!-\-            <property name="IMDI-handler" value="{jndi:comp/env/LEXUS/IMDI_Handler}"/>-\->
    </bean>-->

</beans>
