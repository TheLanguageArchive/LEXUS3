<?xml version="1.0"?>
<stx:transform xmlns:stx="http://stx.sourceforge.net/2002/ns" xmlns:lexus="http://www.mpi.nl/lexus"
    xmlns:fragments="http://org.apache.cocoon.transformation/fragments/1.0"
    xmlns:cinclude="http://apache.org/cocoon/include/1.0" xmlns:util="java:java.util.UUID"
    version="1.0">

    <stx:variable name="lexiconId" select="''"/>

    <stx:buffer name="user"/>

    <stx:template match="data">
        <stx:assign name="lexiconId" select="@new-lexicon-id"/>
        <stx:copy attributes="@*">
            <stx:process-children/>
        </stx:copy>
    </stx:template>

    <stx:template match="lexus">
        <fragments:transform fragment-name="create-lexicon"
            fragment-namespace="http://www.mpi.nl/lexus">
            <lexus:create-lexicon>
                <lexus id="{$lexiconId}">
                    <stx:process-children/>
                </lexus>
            </lexus:create-lexicon>
        </fragments:transform>
    </stx:template>


    <!-- 
        Process the schema element.
    -->
    <stx:template match="schema">
        <schema>
            <stx:process-attributes/>
            <stx:process-children/>
        </schema>
    </stx:template>

    <!-- 
        Process a container.
    -->
    <stx:template match="container">
        <stx:if test="@type = 'lexicon'">
			<stx:copy attributes="@*[not(name) and not(name()='mandatory') and not(name()='multiple')]">
			    <stx:attribute name="name" select="'Lexicon'"/>
                <stx:attribute name="mandatory" select="'false'"/>
                <stx:attribute name="multiple" select="'true'"/>
                <stx:process-children/>
            </stx:copy>
    </stx:if>
    <stx:if test="@type = 'lexical-entry'">
			<stx:copy attributes="@*[not(name) and not(name()='mandatory') and not(name()='multiple')]">
				<stx:attribute name="name" select="'lexicalEntry'"/>
                <stx:attribute name="mandatory" select="'false'"/>
                <stx:attribute name="multiple" select="'true'"/>
                <stx:process-children/>
            </stx:copy>
    </stx:if>
    <stx:if test="not(@type = 'lexical-entry') and not(@type = 'lexicon')">
        <container>
            <stx:process-attributes/>
            <stx:process-children/>
        </container>
    </stx:if>
    </stx:template>

    <stx:template match="@*">
        <stx:copy/>
    </stx:template>

    <stx:template match="node()">
        <stx:copy attributes="@*">
            <stx:process-children/>
        </stx:copy>
    </stx:template>

</stx:transform>
